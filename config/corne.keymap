#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>

/*                KEY POSITIONS
             0   1   2   3   4   5      6   7   8   9   10  11
             12  13  14  15  16  17     18  19  20  21  22  23
             24  25  26  27  28  29     30  31  32  33  34  35
                         36  37  38     39  40  41            */

/* Key Position Groups */
#define KEYS_L 0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29  // left-hand keys
#define KEYS_R 6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 // right-hand keys
#define THUMBS 36 37 38 39 40 41                      // thumb keys



// Keymap configuration (Colemak-DHm)
/ {
        behaviors {
          mtl: mod_tap_left {
            compatible = "zmk,behavior-hold-tap";
            label = "MOD_TAP_LEFT";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <KEYS_R THUMBS>;
            hold-trigger-on-release;
            global-quick-tap;
                };

          mtr: mod_tap_right {
            compatible = "zmk,behavior-hold-tap";
            label = "MOD_TAP_RIGHT";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <KEYS_L THUMBS>;
            hold-trigger-on-release;
            global-quick-tap;
                };

        };

        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
// | Play/Pause   |  Q           | W          |  F          |  P             |  B               | # |  J           |  L             |  U          |  Y          |  ;           |  ESC            |
// | TAB          |  CTRL / A    | ALT / R    |  GUI / S    |  SHIFT / T     |  G               | # |  M           |  SHIFT / N     |  GUI  / E   |  ALT / I    |  CTRL / O    |  '              |
// | Prev         |  Z           |  X         |  C          |  D             |  V               | # |  K           |  H             |  ,          |  .          |  /           |  Next           |
//                                            |             |  BKSP          |  RSA / LGUI      | # |  LWR / ENT   |  SPC           |             |
                        bindings = <
        &kp C_PP             &kp Q          &kp W       &kp F       &kp P             &kp B          &kp J     &kp L           &kp U           &kp Y        &kp SEMI    &kp ESC
        &kp TAB              &mtl CTRL A    &mtl ALT R  &mtl LGUI S &mtl LSHFT T      &kp G          &kp M     &mtr SHFT N     &mtr GUI E      &mtr ALT I   &mtr CTRL O &kp SQT
        &kp C_PREV &kp Z     &kp X          &kp C       &kp D       &kp V             &kp K          &kp H     &kp COMMA       &kp DOT         &kp FSLH     &kp C_NEXT
                                            &trans      &kp BKSP    &mtl mo 2 LGUI    &mtr mo 1 RET  &kp SPACE &trans
                        >;
                };
                lower_layer {
// ----------------------------------------------------------------------------------------------------
// |  F1  |  F2  |  F3  |  F4        |  F5  |  {    | # |  }  | _      |  -  |  +  |       |  EP_ON   |
// |  F6  |  F7  |  F8  |  F9        |  F10 |  ()   | # | ()  |        |     |     |       |  BTCLR   |
// |      |  `   |      |            |      |  {}   | # | []  |        |     |     |       |  BT1     |
//                      |            | GUI  | ESC   | # | ENT |        |     |
                        bindings = <
        &kp F1                   &kp F2     &kp F3     &kp F4   &kp F5    &kp LEFT_BRACE             &kp RIGHT_BRACE             &kp MINUS       &kp EQUAL      &trans     &kp F10      &ext_power EP_ON
        &kp F6   &kp F7     &kp F8     &kp F9   &kp F10   &kp LEFT_PARENTHESIS       &kp RIGHT_PARENTHESIS       &trans          &trans         &trans     &trans       &bt BT_CLR
        &trans   &kp GRAVE  &trans     &trans   &trans    &kp LEFT_BRACKET           &kp RIGHT_BRACKET           &trans          &trans         &trans     &trans       &bt BT_SEL 0
                                        &trans  &kp BKSP  &kp LGUI                   &kp RET                     &kp SPACE       &trans
                        >;
                };

                raise_layer {
// -----------------------------------------------------------------------------------------
// |    |  1  |  2  |  3  |  4  |  5  | # |  6    |  7   |  8   |  9      |     |      |
// |    |     |     |     |     | TAB | # | LFT   | DOWN |  UP  |  RIGHT  |  0  |      |
// |    |  `  |     |     |     |     | # |  :    |   '  |  ?   |   \     |     |      |
//                  |     |     |     | # | ENTER |      |      |
                        bindings = <
        &trans &kp N1    &kp N2 &kp N3  &kp N4 &kp N5         &kp N6        &kp N7           &kp N8     &kp N9      &trans   &trans
        &trans &trans    &trans &trans  &trans &kp TAB        &kp LEFT      &kp DOWM         &kp UP     &kp RIGHT   &kp N0   &trans
        &trans &kp GRAVE &trans &trans  &trans &trans         &kp SEMICOLON &kp SINGLE_QUOTE &kp SLASH  &kp BSLH    &trans   &trans
                                &trans  &trans &trans         &kp ENTER     &trans           &trans
                        >;
                };
        };
};
